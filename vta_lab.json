{
	"_id": "MckZN8X24RLdAPrdQ",
	"title": "IDS/IPS system basics",
	"description": "How to install and configure Suricata IDS. Writing your first rule.\nConfiguring IPS mode with drop rules.",
	"success": "Profit!",
	"owner": "AqW8vDWa49bAp7jnG",
	"createdAt": "2018-01-12T12:18:55.365Z",
	"updatedAt": "2018-01-21T12:43:10.021Z",
	"in_hub": false,
	"allow_end": false,
	"show_chat": false,
	"disable_feedback": false,
	"display": "progress",
	"git": {
		"uri": "git@github.com:haam3r/RFVTA_IDS_Lab1.git",
		"user": "AqW8vDWa49bAp7jnG",
		"branch": "",
		"files": [
			{
				"path": "bootstrap.sh",
				"commit": {
					"hash": "latest",
					"author": "N/A",
					"date": "N/A",
					"message": "latest commit in this branch"
				},
				"branch": "master",
				"name": "bootstrap"
			}
		]
	},
	"display_unit": "%",
	"version": "0.1",
	"contributors": [],
	"test_users": [],
	"material": "",
	"web": "",
	"topology": "",
	"objectives": [
		{
			"title": "Introduction",
			"weight": 1,
			"oname": "obj-djk",
			"description": "# Introduction\n\nThis lab helps you to become familiar with IDS/IPS systems. But let's start off with a refresher on what they are and how they operate. After that a brief description of what this lab will cover so you know what to expect.\n\n## Intrusion Detection System\n\nIntrusion Detection System (here on out IDS) is a solution designed to monitor network traffic to discover anomalous behaviour and policy violations. Ad IDS solution works by receiving or intercepting network traffic and matching network packet header and/or content against signatures. Intrusion Prevention System (here on out IPS) is usually a specific mode of an IDS where\nthe device or software is configured to not only alert on anomalous traffic, but to also block it.",
			"createdAt": "2018-01-12T12:32:52.796Z",
			"updatedAt": "2018-01-21T12:15:03.739Z",
			"longTitle": "Introduction",
			"enabled": true,
			"compulsory": true,
			"completionMethod": "view",
			"steps": [
				{
					"title": "Lab infra",
					"weight": 1,
					"uname": "step-rf70",
					"description": "# General overview of the labs infrastructure\n\nYour lab is composed of three machines. A desktop from where you can administer the other systems. A web server providing a webpage that is being attacked and an IDS server that is front of both of them. \n\n### Web server\n- username:\n- IP:\n\n### IDS\n- username:\n- IP:\n\n### Desktop\n- username:\n- IP:",
					"createdAt": "2018-01-12T12:33:42.024Z",
					"updatedAt": "2018-01-21T11:52:28.972Z",
					"longTitle": "Lab infra",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				},
				{
					"title": "Rules",
					"weight": 1,
					"uname": "step-puh1",
					"description": "What the student needs to account for. For example SSH is used for checks and not for attacks.\nHow many times can you enter a wrong answer for an objective etc.",
					"createdAt": "2018-01-12T12:36:34.786Z",
					"updatedAt": "2018-01-12T12:47:10.131Z",
					"longTitle": "Rules",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				}
			],
			"material": "",
			"web": ""
		},
		{
			"title": "Setup IDS",
			"weight": 1,
			"oname": "obj-hn3",
			"description": "# Installing Suricata IDS\n\nThe first thing with any software, is to install and configure it. This objective will walk you through installing the open-source Suricata IDS system. After installation we will cover the basic configuration options.",
			"createdAt": "2018-01-12T12:38:12.668Z",
			"updatedAt": "2018-01-21T12:30:39.067Z",
			"longTitle": "Setup IDS",
			"enabled": true,
			"compulsory": true,
			"completionMethod": "view",
			"steps": [
				{
					"title": "Install Suricata",
					"weight": 1,
					"uname": "step-rx10",
					"description": "# Installation steps\n\nAlthough there are many ways to install Suricata. The easiest way on Ubuntu is to use a PPA. More advanced install modes will be covered later.\nThe basic steps are as listed below:\n \n```bash\nsudo add-apt-repository ppa:oisf/suricata-stable\nsudo apt-get update\napt-get install suricata\n```\n\n## Checks:\n```bash\ndpkg -l | grep suricata\n```",
					"createdAt": "2018-01-12T12:38:27.035Z",
					"updatedAt": "2018-01-21T12:36:02.275Z",
					"longTitle": "Install Suricata",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				},
				{
					"title": "Configure Suricata",
					"weight": 1,
					"uname": "step-rjo1",
					"description": "# Configuring Suricata\n\nBy default all configuration parametes for Suricata are placed inside the file `/etc/suricata/suricata.yaml`.\nWe will now proceed to configure the minimum neccessary options to get Suricata up and running.\n\n\n### Checks\n  ```bash\n  if [ $(systemctl status suricata) -eq 0] && [ $(grep -i 'engine started' /var/log/suricata/suricata.log) -eq 0 ] && [ $(ps auxf | grep '[s]uricata') -eq 0 ]\n  then\n      echo \"Success\"\n  fi\n  ```",
					"createdAt": "2018-01-12T12:38:40.721Z",
					"updatedAt": "2018-01-21T12:43:10.020Z",
					"longTitle": "Configure Suricata",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				}
			],
			"material": "",
			"web": ""
		},
		{
			"title": "My first rule",
			"weight": 1,
			"oname": "obj-h66",
			"description": "Writing rules for suricata. Types of rules. Structure of a rule etc.",
			"createdAt": "2018-01-12T12:39:17.830Z",
			"updatedAt": "2018-01-12T12:50:54.015Z",
			"longTitle": "My first rule",
			"enabled": true,
			"compulsory": true,
			"completionMethod": "view",
			"steps": [
				{
					"title": "Write rule",
					"weight": 1,
					"uname": "step-3zc0",
					"description": "Create rule to alert on any ICMP traffic.\n\nChecks:\n```bash\nls /etc/suricata/rules/custom.rules\n```",
					"createdAt": "2018-01-12T12:39:52.819Z",
					"updatedAt": "2018-01-12T12:51:00.439Z",
					"longTitle": "Write rule",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				},
				{
					"title": "Test rule",
					"weight": 1,
					"uname": "step-m071",
					"description": "Add rule to suricata configs. Make sure rule fires and alert is logged.\n\n- Checks:\n  - Alerts for the right criteria appear.\n  ```bash\n  # TODO: Grep criteria probably needs refinement/Also check that right attacking ip is logged\n  if [ $(grep -i 'icmp' /var/log/suricata/fast.log) -eq 0 ]\n  then\n      echo \"Success\"\n  fi\n  ```",
					"createdAt": "2018-01-12T12:40:00.032Z",
					"updatedAt": "2018-01-12T12:51:12.091Z",
					"longTitle": "Test rule",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				}
			],
			"material": "",
			"web": ""
		},
		{
			"title": "IPS Mode",
			"weight": 1,
			"oname": "obj-861",
			"description": "How to run Suricata in IPS mode aka ability to block traffic based on signatures",
			"createdAt": "2018-01-12T12:41:30.711Z",
			"updatedAt": "2018-01-12T12:51:51.027Z",
			"longTitle": "IPS Mode",
			"enabled": true,
			"compulsory": true,
			"completionMethod": "view",
			"steps": [
				{
					"title": "Run in IPS mode",
					"weight": 1,
					"uname": "step-p7x0",
					"description": "Reconfigure Suricata to run inline IPS\n\nChecks:\n```bash\n# NFQueue support\nsuricata --build-info | grep NFQueue | awk '{print $3}'\n# running with q option\nps auxf | grep 'suricata' | grep '-q'\n# IPTables\nsudo iptables -vnL | grep 'NFQUEUE'\n```",
					"createdAt": "2018-01-12T12:41:48.716Z",
					"updatedAt": "2018-01-12T13:00:22.337Z",
					"longTitle": "Run in IPS mode",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				},
				{
					"title": "Drop rule",
					"weight": 1,
					"uname": "step-i1r1",
					"description": "Convert previous ICMP alert rule to drop rule.\n\n- Checks:\n  - Traffic does not reach web server/PING reply does not succeed, but web request works.\n  ```bash\n  if [ $(ping -c 1 1.2.3.4) -ne 0 ] && [ $(curl -m 3 http://1.2.3.4) -eq 0 ]\n  then\n      echo \"Success\"\n  fi\n  ```",
					"createdAt": "2018-01-12T12:42:02.856Z",
					"updatedAt": "2018-01-12T12:42:28.390Z",
					"longTitle": "Drop rule",
					"enabled": true,
					"compulsory": true,
					"completionMethod": "view",
					"material": "",
					"web": ""
				}
			],
			"material": "",
			"web": ""
		}
	],
	"ownername": "andreselliku"
}